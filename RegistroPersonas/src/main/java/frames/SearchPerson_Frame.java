package frames;

import entities.Person;
import java.util.Optional;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;
import main.Main;

public class SearchPerson_Frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form SearchPerson_Frame
     */
    public SearchPerson_Frame() {
        initComponents();

        this.setDefaultCloseOperation(JInternalFrame.DISPOSE_ON_CLOSE);
        this.addInternalFrameListener(new InternalFrameListener() {

            @Override
            public void internalFrameClosing(InternalFrameEvent e) {
                Main.getMain_frame().clearRowsInTable();
            }

            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                Main.getMain_frame().fillTable_People(Main.getPersonManager().getPerson_list());
            }

            @Override
            public void internalFrameOpened(InternalFrameEvent e) {
                System.out.println(Main.getPersonManager().getPerson_list());
            }

            @Override
            public void internalFrameIconified(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameDeiconified(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameActivated(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameDeactivated(InternalFrameEvent e) {
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        namePersonLabel = new javax.swing.JLabel();
        namePersonField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Buscar persona");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 11))); // NOI18N

        namePersonLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        namePersonLabel.setText("Nombre de la persona:");

        namePersonField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        searchButton.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        searchButton.setText("Buscar");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(namePersonLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(namePersonField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(searchButton)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(namePersonLabel)
                .addGap(18, 18, 18)
                .addComponent(namePersonField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        if (!this.namePersonField.getText().isEmpty()) {
            String name = this.namePersonField.getText();
            DefaultTableModel newModel = (DefaultTableModel) Main.getMain_frame().getPeopleTableModel();
            Main.getMain_frame().clearRowsInTable();

            Optional<Person> opt = Main.getPersonManager().getPerson(name);
            if (opt.isPresent()) {
                Person person = opt.get();

                Object[] data = new Object[Main.getMain_frame().getPeopleTableModel().getColumnCount()];
                data[0] = person.getId();
                data[1] = person.getName();
                data[2] = person.getBirth_date();
                data[3] = Main.getPersonManager().getPersonAge(person);
                data[4] = person.getHeight();
                switch (person.getGender()) {
                    case 'M': {
                        data[5] = "Masculino";
                        break;
                    }
                    case 'F': {
                        data[5] = "Femenino";
                        break;
                    }
                    case 'N':
                    default: {
                        data[5] = "No especificado";
                        break;
                    }
                }
                newModel.addRow(data);

                Main.getMain_frame().updateTableModel(newModel);
            } else {
                JOptionPane.showMessageDialog(null, "La persona no fue encontrada en la base de datos.", "No encontrado", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, proporcione un nombre para mostrar los datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField namePersonField;
    private javax.swing.JLabel namePersonLabel;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

}
