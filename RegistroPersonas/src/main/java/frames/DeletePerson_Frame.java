package frames;

import entities.Person;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Optional;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import main.Main;
import utils.Log;

public class DeletePerson_Frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form DeletePerson_Frame
     */
    public DeletePerson_Frame() {
        initComponents();
        
        try (PreparedStatement stmt = Main.getMySQLConnection().prepareStatement("SELECT p.name FROM people p")) {
            try (ResultSet rs = stmt.executeQuery()) {
                DefaultComboBoxModel model = (DefaultComboBoxModel) this.namesComboBox.getModel();
                while (rs.next()) {
                    model.addElement(rs.getString("p.name"));
                }
            }
        } catch (SQLException ex) {
            Log.write(this.getClass(), ex.getLocalizedMessage(), 3);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        namesComboBox = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 11))); // NOI18N

        idLabel.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        idLabel.setText("Seleccione el nombre de la persona:");

        deleteButton.setText("Borrar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        namesComboBox.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(deleteButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(namesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        try {
            PreparedStatement stmt = Main.getMySQLConnection().prepareStatement("SELECT p.id FROM people p WHERE name = ?");
            String name = this.namesComboBox.getSelectedItem().toString();
            stmt.setString(1, name);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    int id = rs.getInt("p.id");
                    stmt = Main.getMySQLConnection().prepareStatement("DELETE FROM people WHERE id = ?");
                    stmt.setInt(1, id);
                    stmt.execute();
                    stmt.close();
                    
                    JOptionPane.showMessageDialog(null, "Se ha removido a " + name + " de la base de datos.", "Borrar", JOptionPane.INFORMATION_MESSAGE);
                    Main.getAdministratorManager().submitLog(Main.getAdministratorOnline(), "Elimino a " + name + " de la base de datos");
                    
                    Optional<Person> opt = Main.getPersonManager().getPerson(name);
                    if (opt.isPresent()) {
                        Person person = opt.get();
                        Main.getPersonManager().getPerson_list().remove(person);
                    }
                    
                    Main.getMain_frame().clearRowsInTable();
                    Main.getMain_frame().fillTable_People(Main.getPersonManager().getPerson_list());
                    this.dispose();
                }
            }
        } catch (SQLException ex) {
            Log.write(this.getClass(), ex.getLocalizedMessage(), 3);
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> namesComboBox;
    // End of variables declaration//GEN-END:variables

}
